"""Convert id fields to UUID

Revision ID: 3e7fbbc62ad4
Revises: 18039c29e3db
Create Date: 2025-08-28 06:29:10.568164

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3e7fbbc62ad4'
down_revision: Union[str, Sequence[str], None] = '18039c29e3db'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('complaints')
    op.alter_column('leads', 'id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('leads', 'org_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('organizations', 'id',
               existing_type=sa.NUMERIC(),
               type_=sa.String(),
               existing_nullable=False)
    op.create_unique_constraint(None, 'organizations', ['id'])
    op.add_column('users', sa.Column('password', sa.String(), nullable=False))
    op.alter_column('users', 'id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('users', 'organization_id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=True)
    op.create_unique_constraint(None, 'users', ['id'])
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'hashed_password')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.drop_column('users', 'is_active')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('is_active', sa.BOOLEAN(), nullable=True))
    op.add_column('users', sa.Column('first_name', sa.VARCHAR(), nullable=False))
    op.add_column('users', sa.Column('last_name', sa.VARCHAR(), nullable=False))
    op.add_column('users', sa.Column('hashed_password', sa.VARCHAR(), nullable=False))
    op.add_column('users', sa.Column('created_at', sa.DATETIME(), nullable=True))
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'organization_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.drop_column('users', 'password')
    op.drop_constraint(None, 'organizations', type_='unique')
    op.alter_column('organizations', 'id',
               existing_type=sa.String(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('leads', 'org_id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.alter_column('leads', 'id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.create_table('complaints',
    sa.Column('id', sa.NUMERIC(), nullable=False),
    sa.Column('org_id', sa.NUMERIC(), nullable=False),
    sa.Column('lead_id', sa.NUMERIC(), nullable=False),
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.Column('classification', sa.VARCHAR(), nullable=True),
    sa.Column('priority', sa.VARCHAR(), nullable=True),
    sa.Column('status', sa.VARCHAR(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['lead_id'], ['leads.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
